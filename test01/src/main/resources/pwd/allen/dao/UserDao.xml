<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pwd.allen.dao.UserDao">
    <select id="getById" resultType="pwd.allen.entity.User">
    select id, user_name, status, create_at, age, dept_id from db_user where id = #{id}
    </select>
    <select id="getById" resultType="pwd.allen.entity.User" databaseId="oracle">
    select id, name USERNAME, createdate createAt, age, did dept_id,status from pwd_user where id = #{id}
    </select>

    <select id="getByList" resultType="pwd.allen.entity.User">
    select * from db_user where id = #{param[0]} and user_name=#{param1[1]}
    </select>

    <select id="getByIdReturnMap" resultType="map">
    select * from db_user where id = #{id}
    </select>

    <select id="getsByUserNameLike" resultType="pwd.allen.entity.User">
    select * from db_user where user_name like #{userName}
    </select>

    <select id="getsByAgeLtReturnMap" resultType="pwd.allen.entity.User">
    select * from db_user where age &lt;= #{age}
    </select>

    <resultMap id="MyMap" type="pwd.allen.entity.User">
        <id column="id" property="id"/>
        <result column="create_at" property="createAt"/>
        <result column="user_name" property="userName"/>
        <association property="dept" javaType="pwd.allen.entity.Department">
            <id column="did" property="id"/>
            <result column="dept_name" property="deptName"/>
        </association>
    </resultMap>
    <select id="getUserAndDept" resultMap="MyMap">
    select du.*, dd.id did, dd.dept_name dept_name
    from db_user du left join db_dept dd on dd.id=du.dept_id where du.id=#{id}
    </select>

    <resultMap id="MyMapStep" type="pwd.allen.entity.User">
        <id column="id" property="id"/>
        <result column="create_at" property="createAt"/>
        <result column="user_name" property="userName"/>
        <association property="dept" select="pwd.allen.dao.DepartmentDao.getById" column="did">
        </association>
    </resultMap>
    <select id="getStep" resultMap="MyMapStep">
    select * from db_user where id=#{id}
    </select>

    <select id="getUsersByDeptId" resultType="pwd.allen.entity.User">
        select * from db_user where dept_id=#{deptId}
    </select>

    <sql id="mySql">
        and ${key} = ${value}
    </sql>

    <select id="getByIdAndUserName" resultType="pwd.allen.entity.User">
    select * from db_user where id = #{id} and user_name = #{userName}
        <include refid="mySql">
            <property name="key" value="1"/>
            <property name="value" value="1"/>
        </include>
    </select>

    <select id="selectByMap" resultType="pwd.allen.entity.User">
    select * from db_user where id = #{map.id} and user_name=#{param1.userName}
    </select>

    <!-- useGeneratedKeys="true"用于mysql这种主键自增的情况 -->
    <insert id="insertUser">
        <!--<selectKey keyColumn="id" keyProperty="id" order="BEFORE">
            select user_seq.next()
        </selectKey>-->
    insert into db_user(id, user_name, age, status, dept_id)
    values(#{id}, #{userName}, #{age}, #{status}, #{dept.id})
    </insert>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="id" databaseId="mysql">
        insert into db_user(user_name, age, status, dept_id)
        values(#{userName}, #{age}, #{status}, #{dept.id})
    </insert>

    <!--
        Oracle不支持自增；可以使用序列来模拟自增
    -->
    <insert id="addUser" databaseId="oracle">
        <!-- 在插入之前查询主键值并赋给id -->
        <selectKey keyProperty="id" order="BEFORE" resultType="int">
            select USER_SEQ.nextval from dual
        </selectKey>
        insert into pwd_user(id, name, age, status, createdate, did)
        values(#{id}, #{userName,jdbcType=NULL}, #{age}, #{status},#{createAt}, #{dept.id})
    </insert>

</mapper>